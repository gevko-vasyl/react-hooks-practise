{"version":3,"sources":["redux/slices/todos.js","redux/store/index.js","redux/middlewares/logger.js","components/SearchBox/SearchBox.jsx","components/CountryList/CountryList.jsx","components/CountryInfo/CountryInfo.jsx","components/Spinner/Spinner.js","services/api.js","pages/CountriesPage.jsx","components/PostList/PostList.jsx","pages/PostsPage.jsx","components/Todo/Todo.jsx","components/TodoForm/TodoForm.jsx","components/TodoList/TodoList.jsx","pages/TodosPage.jsx","App.jsx","index.js"],"names":["fetchTodoList","createAsyncThunk","a","axios","get","result","data","createTodo","todo","post","deleteTodo","id","delete","rootReducer","todos","createSlice","name","initialState","items","status","error","extraReducers","fulfilled","state","action","payload","pending","rejected","filter","item","store","configureStore","reducer","devTools","process","middleware","next","console","group","type","prevState","getState","log","info","newState","groupEnd","thunk","SearchBox","onSearch","autoComplete","minLength","debounceTimeout","onChange","e","target","value","CountryList","countries","countryData","common","map","flags","src","png","alt","width","height","formatLanguages","languages","Object","values","join","CountryInfo","country","capital","population","spin","keyframes","Spinner","CgSpinner","fetchCountries","countryName","response","CountriesPage","useState","setCountryName","setCountries","reqStatus","setReqStatus","useEffect","length","toast","icon","getCountries","showCountryList","showCountryInfo","size","PostList","posts","title","body","userId","slice","page","params","URLSearchParams","_limit","_page","url","PostsPage","setPosts","setPage","TOTAL_NUMBER_OF_POSTS","fetchPosts","then","prevPosts","onClick","prevPage","Todo","author","priority","dispatch","index","useDispatch","formInitialState","agree","TodoForm","form","setForm","inputHandler","checked","onSubmit","preventDefault","placeholder","autoFocus","disabled","hidden","htmlFor","TodoList","useSelector","TodosPage","App","to","path","position","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa8be0fc.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const fetchTodoList = createAsyncThunk(\n  \"todo/fetchTodoList\",\n  async () => {\n    const result = await axios.get(\"http://localhost:7777/tasks\");\n    return result.data;\n  }\n);\n\nexport const createTodo = createAsyncThunk(\"todo/createTodo\", async (todo) => {\n  const result = await axios.post(\"http://localhost:7777/tasks\", todo);\n  return result.data;\n});\n\nexport const deleteTodo = createAsyncThunk(\"todo/deleteTodo\", async (id) => {\n  const result = axios.delete(`http://localhost:7777/tasks/${id}`);\n  return id;\n});\n\nconst todoSlice = createSlice({\n  name: \"todos\",\n  // initialState: [],\n  initialState: {\n    items: [],\n    status: null,\n    error: null,\n  },\n  // reducers: {\n  //   addTodo: (state, action) => [...state, action.payload],\n  //   deleteTodo: (state, action) =>\n  //     state.filter((todo) => todo.id !== action.payload),\n  // },\n  extraReducers: {\n    [fetchTodoList.fulfilled]: (state, action) => {\n      state.items = action.payload;\n      state.status = null;\n      state.error = null;\n    },\n    [fetchTodoList.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [fetchTodoList.rejected]: (state, action) => {\n      state.status = \"rejected\";\n      state.error = \"Error\";\n    },\n    [createTodo.fulfilled]: (state, action) => {\n      state.items = [...state.items, action.payload];\n      state.status = null;\n      state.error = null;\n    },\n    [createTodo.pending]: (state, action) => {\n      state.status = \"loading\";\n      state.error = null;\n    },\n    [createTodo.rejected]: (state, action) => {\n      state.status = null;\n      state.error = \"Error\";\n    },\n    [deleteTodo.fulfilled]: (state, action) => {\n      state.items = state.items.filter((item) => item.id !== action.payload);\n    },\n  },\n});\n\n// export const { addTodo, deleteTodo } = todoSlice.actions;\nexport default todoSlice.reducer;\n","// import { createStore, applyMiddleware } from \"redux\";\n// import {\n//   devToolsEnhancer,\n//   composeWithDevTools,\n// } from \"redux-devtools-extension\";\n\n// import { rootReducer } from \"../reducers\";\n// import thunk from \"redux-thunk\";\n\n// export const store = createStore(\n//   rootReducer,\n//   composeWithDevTools(applyMiddleware(myMiddleware, thunk))\n// );\n\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport thunk from \"redux-thunk\";\nimport { myMiddleware } from \"../middlewares/logger\";\nimport todos from \"redux/slices/todos\";\nconst rootReducer = { todos };\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV !== \"production\",\n  middleware: [myMiddleware, thunk],\n});\n","export const myMiddleware = (store) => (next) => (action) => {\n  console.group(action.type);\n  const prevState = store.getState();\n  console.log(\"prevState \", prevState);\n  console.info(\"action \", action);\n  const result = next(action);\n  const newState = store.getState();\n  console.log(\"newState \", newState);\n  console.groupEnd();\n  return result;\n};\n","import { DebounceInput } from \"react-debounce-input\";\n\nexport const SearchBox = ({ onSearch }) => {\n  return (\n    <div>\n      <DebounceInput\n        autoComplete=\"off\"\n        minLength={1}\n        debounceTimeout={300}\n        onChange={(e) => onSearch(e.target.value)}\n      />\n    </div>\n  );\n};\n","export const CountryList = ({ countries }) => {\n  console.log(countries);\n  const countryData = countries[0].name.common;\n  console.log(countryData);\n  return (\n    <ul>\n      {countries.map(({ name, flags }) => (\n        <li key={name.common}>\n          <img src={flags.png} alt={name.common} width=\"24\" height=\"24\" />\n          {name.common}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","const formatLanguages = (languages) => {\n  return Object.values(languages).join(\", \");\n};\n\nexport const CountryInfo = ({ country }) => {\n  const { flags, name, capital, languages, population } = country;\n  return (\n    <div>\n      <h1>\n        <img src={flags.png} alt={name.common} width=\"40\" height=\"40\" />\n        {name.common}\n      </h1>\n      <p>Capital: {capital}</p>\n      <p>Population: {population}</p>\n      <p>Languages: {formatLanguages(languages)}</p>\n    </div>\n  );\n};\n","import styled from \"@emotion/styled/macro\";\nimport { keyframes } from \"@emotion/react\";\nimport { CgSpinner } from \"react-icons/cg\";\n\nconst spin = keyframes`\n0%{transform:rotate(0deg)};\n100%{transform:rotate(1turn)}`;\n\nexport const Spinner = styled(CgSpinner)`\n  animation: ${spin} 1s linear infinite;\n`;\n","import axios from \"axios\";\n\nexport const fetchCountries = async (countryName) => {\n  const response = await axios.get(\n    `https://restcountries.com/v3.1/name/${countryName}`\n  );\n  return [response.data];\n};\n\n// import axios from \"axios\";\n\n// axios.defaults.baseURL = \"https://restcountries.eu/rest/v2\";\n\n// export const fetchCountries = async (countryName) => {\n//   const params = \"fields=name;capital;population;flag;languages\";\n//   const response = await axios.get(`/name/${countryName}?${params}`);\n//   return response.data;\n// };\n","import { useState, useEffect } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { SearchBox } from \"components/SearchBox/SearchBox\";\nimport { CountryList } from \"components/CountryList/CountryList\";\nimport { CountryInfo } from \"components/CountryInfo/CountryInfo\";\nimport { Spinner } from \"components/Spinner/Spinner\";\nimport { fetchCountries } from \"services/api\";\n\nexport const CountriesPage = () => {\n  const [countryName, setCountryName] = useState(\"\");\n  const [countries, setCountries] = useState([]);\n  const [reqStatus, setReqStatus] = useState(\"idle\");\n\n  const handleNameChange = (countryName) => {\n    setCountryName(countryName);\n  };\n\n  useEffect(() => {\n    if (countries.length > 10) {\n      toast(\"Too many matches found. Please enter a more specific name.\", {\n        icon: \"⚠️\",\n      });\n    }\n  }, [countries.length]);\n\n  useEffect(() => {\n    if (reqStatus === \"rejected\") {\n      toast.error(\"Oops, there is no country with that name\");\n    }\n  }, [reqStatus]);\n\n  useEffect(() => {\n    if (countryName === \"\") return;\n\n    async function getCountries() {\n      try {\n        setReqStatus(\"pending\");\n        setCountries([]);\n        const countries = await fetchCountries(countryName);\n        setReqStatus(\"resolved\");\n        setCountries(countries[0]);\n      } catch (error) {\n        setReqStatus(\"rejected\");\n      }\n    }\n\n    getCountries();\n  }, [countryName]);\n\n  const showCountryList = countries.length >= 2 && countries.length < 10;\n  const showCountryInfo = countries.length === 1;\n\n  return (\n    <div>\n      {<SearchBox onSearch={handleNameChange} />}\n      {reqStatus === \"pending\" && <Spinner size=\"40\" />}\n      {showCountryList && <CountryList countries={countries} />}\n      {showCountryInfo && <CountryInfo country={countries[0]} />}\n    </div>\n  );\n};\n","export const PostList = ({ posts }) => {\n  return (\n    <div>\n      {posts.map(({ id, title, body, userId }) => {\n        return (\n          <li key={id}>\n            <h2>{title.slice(0, 30)}</h2>\n            <p>\n              <b>Post id</b>: {id}\n            </p>\n            <p>\n              <b>Author id</b>: {userId}\n            </p>\n            <p>{body}</p>\n          </li>\n        );\n      })}\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\nimport { PostList } from \"../components/PostList/PostList\";\n\nconst POSTS_PER_PAGE = 50;\nconst TOTAL_NUMBER_OF_POSTS = 100;\nconst TOTAL_PAGES = TOTAL_NUMBER_OF_POSTS / POSTS_PER_PAGE;\n\nasync function fetchPosts(page) {\n  const params = new URLSearchParams({\n    _limit: POSTS_PER_PAGE,\n    _page: page,\n  });\n  const url = `https://jsonplaceholder.typicode.com/posts?${params}`;\n  const response = await axios.get(url);\n  return response.data;\n}\n\nexport const PostsPage = () => {\n  const [posts, setPosts] = useState([]);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    if (page > TOTAL_PAGES) {\n      return toast.error(\"We are sorry, there are no more posts to load\", {\n        icon: \"⚠️\",\n      });\n    }\n    fetchPosts(page).then((posts) =>\n      setPosts((prevPosts) => [...prevPosts, ...posts])\n    );\n  }, [page]);\n\n  return (\n    <div>\n      {posts.length > 0 && <PostList posts={posts} />}\n      <button onClick={() => setPage((prevPage) => prevPage + 1)}>\n        Fetch more posts\n      </button>\n    </div>\n  );\n};\n","import { useDispatch } from \"react-redux\";\n// import { deleteTodo } from \"../../redux/actions/todos\";\nimport { deleteTodo } from \"redux/slices/todos\";\nimport { BsTrashFill } from \"react-icons/bs\";\n\nconst Todo = ({ status, title, author, priority, id, index }) => {\n  const dispatch = useDispatch();\n  const deleteItem = () => {\n    dispatch(deleteTodo(id));\n  };\n  const updateItem = () => {};\n  return (\n    <div>\n      <div onClick={updateItem}>\n        <p>{title}</p>\n        <p>{priority} priority</p>\n        <p>{author}</p>\n        <span onClick={deleteItem}>\n          <BsTrashFill />\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default Todo;\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { nanoid } from \"nanoid\";\n// import { addTodo } from \"../../redux/actions/todos\";\nimport { createTodo } from \"redux/slices/todos\";\n\nconst formInitialState = {\n  title: \"\",\n  author: \"\",\n  priority: \"Low\",\n  agree: false,\n};\n\nconst TodoForm = () => {\n  const [form, setForm] = useState(formInitialState);\n  const dispatch = useDispatch();\n\n  const inputHandler = (e) => {\n    const name = e.target.name;\n    const value =\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    setForm({ ...form, [name]: value });\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    // form.id = nanoid();\n    dispatch(createTodo(form));\n    setForm(formInitialState);\n  };\n\n  const { title, author, priority, agree } = form;\n\n  return (\n    <form autoComplete=\"off\" onSubmit={submitHandler}>\n      <input\n        type=\"text\"\n        name=\"title\"\n        placeholder=\"New Todo\"\n        autoFocus\n        value={title}\n        onChange={inputHandler}\n      />\n      <input\n        type=\"text\"\n        name=\"author\"\n        placeholder=\"Author\"\n        autoFocus\n        value={author}\n        onChange={inputHandler}\n      />\n      <select name=\"priority\" value={priority} onChange={inputHandler}>\n        <option value=\"Priority\" disabled hidden>\n          Priority\n        </option>\n        <option value=\"Low\">Low</option>\n        <option value=\"Medium\">Medium</option>\n        <option value=\"High\">High</option>\n      </select>\n      <label htmlFor=\"agree\">\n        <input\n          type=\"checkbox\"\n          name=\"agree\"\n          id=\"agree\"\n          checked={agree}\n          onChange={inputHandler}\n        />\n        Agree with our policy\n      </label>\n      <button type=\"submit\"> Add Todo</button>\n    </form>\n  );\n};\n\nexport default TodoForm;\n","import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Todo from \"../Todo/Todo\";\nimport Form from \"../TodoForm/TodoForm\";\n// import { fetchTodo } from \"redux/actions/todos\";\nimport { fetchTodoList } from \"redux/slices/todos\";\n\nconst TodoList = () => {\n  const todos = useSelector((state) => state.todos.items);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTodoList());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1>Todo List</h1>\n\n      <Form />\n      <ul>\n        {todos.length ? (\n          todos.map((todo, index) => (\n            <li key={todo.id}>\n              <Todo {...todo} index={index} />\n            </li>\n          ))\n        ) : (\n          <li>No tasks</li>\n        )}\n      </ul>\n      <div>\n        <button data-filter=\"all\">All</button>\n        <button data-filter=\"compeleted\">Compeleted</button>\n        <button data-filter=\"uncompeleted\">Uncompeleted</button>\n      </div>\n    </>\n  );\n};\n\nexport default TodoList;\n","import TodoList from \"../components/TodoList/TodoList\";\n\nexport const TodosPage = () => {\n  return (\n    <div>\n      <TodoList />\n    </div>\n  );\n};\n","import { Toaster } from \"react-hot-toast\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { CountriesPage } from \"pages/CountriesPage\";\nimport { PostsPage } from \"pages/PostsPage\";\nimport { TodosPage } from \"pages/TodosPage\";\n\nexport const App = () => {\n  return (\n    <div>\n      <ul>\n        <li>\n          <Link to=\"/countries\">Страны</Link>\n        </li>\n        <li>\n          <Link to=\"/posts\">Посты</Link>\n        </li>\n        <li>\n          <Link to=\"/todos\">Todo</Link>\n        </li>\n      </ul>\n      <Switch>\n        <Route path=\"/countries\">\n          <CountriesPage />\n        </Route>\n        <Route path=\"/posts\">\n          <PostsPage />\n        </Route>\n        <Route path=\"/todos\">\n          <TodosPage />\n        </Route>\n      </Switch>\n      <Toaster position=\"top-right\" />\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { store } from \"./redux/store\";\n\nimport { App } from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}